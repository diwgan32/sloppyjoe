<launch>
    <arg name="hokuyo_present"  default="true" />

    <include file="$(find turtlebot_bringup)/launch/minimal.launch"></include>

    <group unless="$(arg hokuyo_present)">
        <include file="$(find turtlebot_bringup)/launch/3dsensor.launch"></include>
    </group>

    <group if="$(arg hokuyo_present)">
        <arg name="camera"      default="camera"/>
        <arg name="publish_tf"  default="false"/>
        <arg name="3d_sensor"   default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- kinect, asus_xtion_pro -->

        <!-- Processing Modules -->
        <arg name="rgb_processing"                  default="true"/>
        <arg name="ir_processing"                   default="false"/>
        <arg name="depth_processing"                default="false"/>
        <arg name="depth_registration"              default="false"/>
        <arg name="depth_registered_processing"     default="false"/>
        <arg name="disparity_processing"            default="false"/>
        <arg name="disparity_registered_processing" default="false"/>

        <!-- Worker threads for the nodelet manager -->
        <arg name="num_worker_threads" default="4" />

        <include file="$(find turtlebot_bringup)/launch/includes/3dsensor/$(arg 3d_sensor).launch.xml">
            <arg name="camera"                          value="$(arg camera)"/>
            <arg name="publish_tf"                      value="$(arg publish_tf)"/>
            <arg name="depth_registration"              value="$(arg depth_registration)"/>
            <arg name="num_worker_threads"              value="$(arg num_worker_threads)" />

            <!-- Processing Modules -->
            <arg name="rgb_processing"                  value="$(arg rgb_processing)"/>
            <arg name="ir_processing"                   value="$(arg ir_processing)"/>
            <arg name="depth_processing"                value="$(arg depth_processing)"/>
            <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)"/>
            <arg name="disparity_processing"            value="$(arg disparity_processing)"/>
            <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)"/>
        </include>

        <node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
            <param name="calibrate_time" type="bool" value="true"/> 
            <param name="port" type="string" value="/dev/ttyACM0"/> 
            <param name="intensity" type="bool" value="false"/>
        </node>
        <node pkg="tf" type="static_transform_publisher" name="hokuyo_static_tf" args="0.11 0.0 0.255 0.0 0.0 0.0 1.0 /base_footprint /laser 100"/>
    </group>

</launch>